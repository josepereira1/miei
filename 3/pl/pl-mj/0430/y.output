State 50 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: decls insts

    2 decls: decls VAR ID ':' tipo ';'
    3      | %empty

    4 insts: insts inst
    5      | %empty

    6 inst: ID '=' exp ';'
    7     | PRINT exp ';'
    8     | READ STRING ',' ID ';'
    9     | READ ID ';'
   10     | ifinst

   11 exp: exp '+' parc
   12    | exp '-' parc
   13    | parc
   14    | '{' insts '}'

   15 parc: parc '*' fact
   16     | parc '/' fact
   17     | fact

   18 fact: ID
   19     | NUM
   20     | '(' exp ')'

   21 tipo: INT

   22 ifinst: IF '(' cond ')' inst
   23       | IF '(' cond ')' inst ELSE inst

   24 cond: exp


Terminals, with rules where they appear

$end (0) 0
'(' (40) 20 22 23
')' (41) 20 22 23
'*' (42) 15
'+' (43) 11
',' (44) 8
'-' (45) 12
'/' (47) 16
':' (58) 2
';' (59) 2 6 7 8 9
'=' (61) 6
'{' (123) 14
'}' (125) 14
error (256)
NUM <n> (258) 19
VAR (259) 2
PRINT (260) 7
INT (261) 21
ID <c> (262) 2 6 8 9 18
READ (263) 8 9
STRING <c> (264) 8
IF (265) 22 23
ELSE (266) 23


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
prog (25)
    on left: 1, on right: 0
decls <c> (26)
    on left: 2 3, on right: 1 2
insts <c> (27)
    on left: 4 5, on right: 1 4 14
inst <c> (28)
    on left: 6 7 8 9 10, on right: 4 22 23
exp <c> (29)
    on left: 11 12 13 14, on right: 6 7 11 12 20 24
parc <c> (30)
    on left: 15 16 17, on right: 11 12 13 15 16
fact <c> (31)
    on left: 18 19 20, on right: 15 16 17
tipo <c> (32)
    on left: 21, on right: 2
ifinst <c> (33)
    on left: 22 23, on right: 10
cond <c> (34)
    on left: 24, on right: 22 23


State 0

    0 $accept: . prog $end

    $default  reduce using rule 3 (decls)

    prog   go to state 1
    decls  go to state 2


State 1

    0 $accept: prog . $end

    $end  shift, and go to state 3


State 2

    1 prog: decls . insts
    2 decls: decls . VAR ID ':' tipo ';'

    VAR  shift, and go to state 4

    $default  reduce using rule 5 (insts)

    insts  go to state 5


State 3

    0 $accept: prog $end .

    $default  accept


State 4

    2 decls: decls VAR . ID ':' tipo ';'

    ID  shift, and go to state 6


State 5

    1 prog: decls insts .
    4 insts: insts . inst

    PRINT  shift, and go to state 7
    ID     shift, and go to state 8
    READ   shift, and go to state 9
    IF     shift, and go to state 10

    $default  reduce using rule 1 (prog)

    inst    go to state 11
    ifinst  go to state 12


State 6

    2 decls: decls VAR ID . ':' tipo ';'

    ':'  shift, and go to state 13


State 7

    7 inst: PRINT . exp ';'

    NUM  shift, and go to state 14
    ID   shift, and go to state 15
    '{'  shift, and go to state 16
    '('  shift, and go to state 17

    exp   go to state 18
    parc  go to state 19
    fact  go to state 20


State 8

    6 inst: ID . '=' exp ';'

    '='  shift, and go to state 21


State 9

    8 inst: READ . STRING ',' ID ';'
    9     | READ . ID ';'

    ID      shift, and go to state 22
    STRING  shift, and go to state 23


State 10

   22 ifinst: IF . '(' cond ')' inst
   23       | IF . '(' cond ')' inst ELSE inst

    '('  shift, and go to state 24


State 11

    4 insts: insts inst .

    $default  reduce using rule 4 (insts)


State 12

   10 inst: ifinst .

    $default  reduce using rule 10 (inst)


State 13

    2 decls: decls VAR ID ':' . tipo ';'

    INT  shift, and go to state 25

    tipo  go to state 26


State 14

   19 fact: NUM .

    $default  reduce using rule 19 (fact)


State 15

   18 fact: ID .

    $default  reduce using rule 18 (fact)


State 16

   14 exp: '{' . insts '}'

    $default  reduce using rule 5 (insts)

    insts  go to state 27


State 17

   20 fact: '(' . exp ')'

    NUM  shift, and go to state 14
    ID   shift, and go to state 15
    '{'  shift, and go to state 16
    '('  shift, and go to state 17

    exp   go to state 28
    parc  go to state 19
    fact  go to state 20


State 18

    7 inst: PRINT exp . ';'
   11 exp: exp . '+' parc
   12    | exp . '-' parc

    ';'  shift, and go to state 29
    '+'  shift, and go to state 30
    '-'  shift, and go to state 31


State 19

   13 exp: parc .
   15 parc: parc . '*' fact
   16     | parc . '/' fact

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 13 (exp)


State 20

   17 parc: fact .

    $default  reduce using rule 17 (parc)


State 21

    6 inst: ID '=' . exp ';'

    NUM  shift, and go to state 14
    ID   shift, and go to state 15
    '{'  shift, and go to state 16
    '('  shift, and go to state 17

    exp   go to state 34
    parc  go to state 19
    fact  go to state 20


State 22

    9 inst: READ ID . ';'

    ';'  shift, and go to state 35


State 23

    8 inst: READ STRING . ',' ID ';'

    ','  shift, and go to state 36


State 24

   22 ifinst: IF '(' . cond ')' inst
   23       | IF '(' . cond ')' inst ELSE inst

    NUM  shift, and go to state 14
    ID   shift, and go to state 15
    '{'  shift, and go to state 16
    '('  shift, and go to state 17

    exp   go to state 37
    parc  go to state 19
    fact  go to state 20
    cond  go to state 38


State 25

   21 tipo: INT .

    $default  reduce using rule 21 (tipo)


State 26

    2 decls: decls VAR ID ':' tipo . ';'

    ';'  shift, and go to state 39


State 27

    4 insts: insts . inst
   14 exp: '{' insts . '}'

    PRINT  shift, and go to state 7
    ID     shift, and go to state 8
    READ   shift, and go to state 9
    IF     shift, and go to state 10
    '}'    shift, and go to state 40

    inst    go to state 11
    ifinst  go to state 12


State 28

   11 exp: exp . '+' parc
   12    | exp . '-' parc
   20 fact: '(' exp . ')'

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    ')'  shift, and go to state 41


State 29

    7 inst: PRINT exp ';' .

    $default  reduce using rule 7 (inst)


State 30

   11 exp: exp '+' . parc

    NUM  shift, and go to state 14
    ID   shift, and go to state 15
    '('  shift, and go to state 17

    parc  go to state 42
    fact  go to state 20


State 31

   12 exp: exp '-' . parc

    NUM  shift, and go to state 14
    ID   shift, and go to state 15
    '('  shift, and go to state 17

    parc  go to state 43
    fact  go to state 20


State 32

   15 parc: parc '*' . fact

    NUM  shift, and go to state 14
    ID   shift, and go to state 15
    '('  shift, and go to state 17

    fact  go to state 44


State 33

   16 parc: parc '/' . fact

    NUM  shift, and go to state 14
    ID   shift, and go to state 15
    '('  shift, and go to state 17

    fact  go to state 45


State 34

    6 inst: ID '=' exp . ';'
   11 exp: exp . '+' parc
   12    | exp . '-' parc

    ';'  shift, and go to state 46
    '+'  shift, and go to state 30
    '-'  shift, and go to state 31


State 35

    9 inst: READ ID ';' .

    $default  reduce using rule 9 (inst)


State 36

    8 inst: READ STRING ',' . ID ';'

    ID  shift, and go to state 47


State 37

   11 exp: exp . '+' parc
   12    | exp . '-' parc
   24 cond: exp .

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31

    $default  reduce using rule 24 (cond)


State 38

   22 ifinst: IF '(' cond . ')' inst
   23       | IF '(' cond . ')' inst ELSE inst

    ')'  shift, and go to state 48


State 39

    2 decls: decls VAR ID ':' tipo ';' .

    $default  reduce using rule 2 (decls)


State 40

   14 exp: '{' insts '}' .

    $default  reduce using rule 14 (exp)


State 41

   20 fact: '(' exp ')' .

    $default  reduce using rule 20 (fact)


State 42

   11 exp: exp '+' parc .
   15 parc: parc . '*' fact
   16     | parc . '/' fact

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 11 (exp)


State 43

   12 exp: exp '-' parc .
   15 parc: parc . '*' fact
   16     | parc . '/' fact

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 12 (exp)


State 44

   15 parc: parc '*' fact .

    $default  reduce using rule 15 (parc)


State 45

   16 parc: parc '/' fact .

    $default  reduce using rule 16 (parc)


State 46

    6 inst: ID '=' exp ';' .

    $default  reduce using rule 6 (inst)


State 47

    8 inst: READ STRING ',' ID . ';'

    ';'  shift, and go to state 49


State 48

   22 ifinst: IF '(' cond ')' . inst
   23       | IF '(' cond ')' . inst ELSE inst

    PRINT  shift, and go to state 7
    ID     shift, and go to state 8
    READ   shift, and go to state 9
    IF     shift, and go to state 10

    inst    go to state 50
    ifinst  go to state 12


State 49

    8 inst: READ STRING ',' ID ';' .

    $default  reduce using rule 8 (inst)


State 50

   22 ifinst: IF '(' cond ')' inst .
   23       | IF '(' cond ')' inst . ELSE inst

    ELSE  shift, and go to state 51

    ELSE      [reduce using rule 22 (ifinst)]
    $default  reduce using rule 22 (ifinst)


State 51

   23 ifinst: IF '(' cond ')' inst ELSE . inst

    PRINT  shift, and go to state 7
    ID     shift, and go to state 8
    READ   shift, and go to state 9
    IF     shift, and go to state 10

    inst    go to state 52
    ifinst  go to state 12


State 52

   23 ifinst: IF '(' cond ')' inst ELSE inst .

    $default  reduce using rule 23 (ifinst)
